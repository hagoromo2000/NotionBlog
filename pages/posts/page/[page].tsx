import Pagination from "@/components/Pagination/Pagination";
import SinglePost from "@/components/SinglePost";
import Tag from "@/components/Tag/Tag";
import { getAllTags, getNumberOfPages, getPostsByPage } from "@/lib/notionAPI";
import { GetStaticPaths, GetStaticProps } from "next";
import Head from "next/head";

export const getStaticPaths: GetStaticPaths = async () => {
  const numberOfPage = await getNumberOfPages();

  // pageの数だけparamsを作成する
  let params = [];
  for (let i = 1; i <= numberOfPage; i++) {
    params.push({ params: { page: i.toString() } });
  }

  return {
    paths: params,
    fallback: "blocking", // 404ページを表示するまで待つ
  };
};

export const getStaticProps: GetStaticProps = async (context) => {
  let currentPage = context.params?.page;
  const numberOfPage = await getNumberOfPages();

  // currentPageがundefinedの場合は、1ページ目を表示する
  if (!currentPage) {
    currentPage = "1";
  }

  // 1ページ目の場合は、getPostsForTopPageを使う
  const postsByPage = await getPostsByPage(
    parseInt(currentPage.toString(), 10)
  );

  const allTags = await getAllTags();

  return {
    props: {
      postsByPage,
      numberOfPage,
      allTags,
    },
    // ISR (Incremental Static Regeneration) 1時間ごとに内容を更新する
    revalidate: 60 * 60,
  };
};

const BlogPageList = ({
  postsByPage,
  numberOfPage,
  allTags,
}: {
  postsByPage: any;
  numberOfPage: number;
  allTags: string[];
}) => {
  return (
    <div className="container h-full w-full mx-auto">
      <Head>
        <title>Notion-Blog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className="container w-full mt-16">
        <h1 className="text-5xl font-medium text-center mb-16">Notion Blog</h1>
        <section className="sm:grid grid-cols-2 w-5/6 gap-3 mx-auto">
          {postsByPage.map((post: any) => (
            <div key={post.id}>
              <SinglePost
                title={post.title}
                description={post.description}
                date={post.date}
                tags={post.tags}
                slug={post.slug}
                isPaginationPage={true}
              />
            </div>
          ))}
        </section>
        <Pagination numberOfPage={numberOfPage} tag={""} />
        <Tag tags={allTags} />
      </main>
    </div>
  );
};

export default BlogPageList;
